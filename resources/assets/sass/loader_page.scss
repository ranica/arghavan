@mixin obj($w,$h,$bg) {
  width: $w;
  height: $h;
  background: $bg;
}

@mixin anim($listName,$delay){
  @each $currentBox in $listName {
    $i: index($listName, $currentBox);
    &:nth-child(#{$currentBox}) {
      animation-delay: 0.1s * $i + $delay;
    }
  }
}

body_loading {
  display: flex !important;
  height: 100vh;
  justify-content: center;
  align-items: center;
  background-image: radial-gradient(ellipse farthest-corner at center top, #9ab1c7 0%, #1a242f 100%);
}

.wrapper_loading {
  @include obj(auto,auto,null);
}

marjan {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  animation:rot 16s linear infinite;
  @keyframes rot {
    100% {
      transform:rotate(360deg);
    }
  }
}

ojvar {
  border-width: 1px;
  border-color: #bcbcbc;
  border-style: solid;
  @include obj(40px,40px,#ffffff);
  border-radius:4px;
  box-shadow: 0 0 1px #fff, 0 0 5px #ffffff, 0 0 10px #ffffff, 0 0 15px #ffffff, 0 0 25px #ffffff, 0 0 55px #ffffff;
  animation: scale 1.2s linear alternate infinite;

  @keyframes scale {
    100% {
      transform: scale(.1);
      opacity: 0;
    }
  }
  @for $i from 1 through 25 {
    &:nth-child(#{$i}) {
      z-index: 25 - $i;
    }
  }
  @for $i from 1 through 5 {
    &:nth-child(#{$i}) {
      animation-delay: 0.1s * $i;
    }
    &:nth-child(#{$i + 6}) {
      @if ($i<5) {
        animation-delay: 0.1s * $i + 0.2s;
      }
    }
    &:nth-child(#{$i + 12}) {
      @if ($i<4) {
        animation-delay: 0.1s * $i + 0.4s;
      }
    }
    &:nth-child(#{$i + 18}) {
      @if ($i<3) {
        animation-delay: 0.1s * $i + 0.6s;
      }
    }
    &:nth-child(#{$i + 23}) {
      @if ($i<2) {
        animation-delay: 0.1s * $i + 0.8s;
      }
    }
  }

  $fCol: 1 6 11 16 21;
  @include anim($fCol,0);

  $sCol: 7 12 17 22;
  @include anim($sCol,0.2s);

  $tCol: 13 18 23;
  @include anim($tCol,0.4s);

  $foCol: 19 24;
  @include anim($foCol,0.6s);

  &:nth-child(25) {
    animation-delay: 0.9s;
  }
}



// $duration:  1.8s;
// $dimension: 3em;

// /**
//  * Create the loop delay with
//  * the extra keyframes
//  */
// @keyframes moveup {
//   0%, 60%, 100% {
//     transform:
//       rotateX(50deg)
//       rotateY(0deg)
//       rotateZ(45deg)
//       translateZ(0);
//   }
//   25% {
//     transform:
//       rotateX(50deg)
//       rotateY(0deg)
//       rotateZ(45deg)
//       translateZ(1em);
//   }
// }

// @keyframes movedown {
//   0%, 60%, 100% {
//     transform:
//       rotateX(50deg)
//       rotateY(0deg)
//       rotateZ(45deg)
//       translateZ(0);
//   }
//   25% {
//     transform:
//       rotateX(50deg)
//       rotateY(0deg)
//       rotateZ(45deg)
//       translateZ(-1em);
//   }
// }

// /**
//  * Square layer styles
//  */
// .layer {
//   display: block;
//   position: absolute;
//   height: $dimension;
//   width: $dimension;

//   box-shadow: 3px 3px 2px rgba(0,0,0,.2);

//   transform:
//     rotateX(50deg)
//     rotateY(0deg)
//     rotateZ(45deg);

//   &:nth-of-type(1) {
//     background: #534a47;
//     margin-top: $dimension/2;
//     animation: movedown $duration cubic-bezier(0.39, 0.575, 0.565, 1) $duration/2 infinite normal;
//     &:before {
//       content: '';
//       position: absolute;
//       width: 85%;
//       height: 85%;
//       background: #37332f;
//     }
//   }

//   &:nth-of-type(2) {
//     background: #5a96bc;
//     margin-top: $dimension/4;
//   }

//   &:nth-of-type(3) {
//     background: rgba(255,255,255,.6);
//     animation: moveup $duration cubic-bezier(0.39, 0.575, 0.565, 1) infinite normal;
//   }

// }


// /* Stage and link styles */

// body { background: #1c2336; }

// .container {
//   position: absolute;
//   top: 50%; left: 20%;
//   transform: translate(-50%, -50%);
// }

// .link {
//   position: absolute;
//   top: 30%; left: 50%;

//   color: rgba(255,255,255,.5);
//   font: 400 1em Helvetica Neue, Helvetica, sans-serif;

//   transform: translate(-50%, -50%);

//   a {
//     color: #ea4c89;
//     text-decoration: none;
//   }
// }

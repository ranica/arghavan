#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.BLL.Logic.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test")]
	public partial class dbIKIUDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertgitdevice(gitdevice instance);
    partial void Updategitdevice(gitdevice instance);
    partial void Deletegitdevice(gitdevice instance);
    partial void InsertHC_direction(HC_direction instance);
    partial void UpdateHC_direction(HC_direction instance);
    partial void DeleteHC_direction(HC_direction instance);
    partial void Insertgitlog(gitlog instance);
    partial void Updategitlog(gitlog instance);
    partial void Deletegitlog(gitlog instance);
    partial void InsertgitlogOperator(gitlogOperator instance);
    partial void UpdategitlogOperator(gitlogOperator instance);
    partial void DeletegitlogOperator(gitlogOperator instance);
    partial void Insertgitmessage(gitmessage instance);
    partial void Updategitmessage(gitmessage instance);
    partial void Deletegitmessage(gitmessage instance);
    partial void InsertgitmsgOperator(gitmsgOperator instance);
    partial void UpdategitmsgOperator(gitmsgOperator instance);
    partial void DeletegitmsgOperator(gitmsgOperator instance);
    partial void Insertgitoperator(gitoperator instance);
    partial void Updategitoperator(gitoperator instance);
    partial void Deletegitoperator(gitoperator instance);
    partial void Insertgitpermit(gitpermit instance);
    partial void Updategitpermit(gitpermit instance);
    partial void Deletegitpermit(gitpermit instance);
    partial void Insertgituser(gituser instance);
    partial void Updategituser(gituser instance);
    partial void Deletegituser(gituser instance);
    partial void Inserttbreqguest(tbreqguest instance);
    partial void Updatetbreqguest(tbreqguest instance);
    partial void Deletetbreqguest(tbreqguest instance);
    #endregion
		
		public dbIKIUDataContext() : 
				base(global::Common.Properties.Settings.Default.TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbIKIUDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbIKIUDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbIKIUDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbIKIUDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<gitdevice> gitdevices
		{
			get
			{
				return this.GetTable<gitdevice>();
			}
		}
		
		public System.Data.Linq.Table<HC_direction> HC_directions
		{
			get
			{
				return this.GetTable<HC_direction>();
			}
		}
		
		public System.Data.Linq.Table<gitlog> gitlogs
		{
			get
			{
				return this.GetTable<gitlog>();
			}
		}
		
		public System.Data.Linq.Table<gitlogOperator> gitlogOperators
		{
			get
			{
				return this.GetTable<gitlogOperator>();
			}
		}
		
		public System.Data.Linq.Table<gitmessage> gitmessages
		{
			get
			{
				return this.GetTable<gitmessage>();
			}
		}
		
		public System.Data.Linq.Table<gitmsgOperator> gitmsgOperators
		{
			get
			{
				return this.GetTable<gitmsgOperator>();
			}
		}
		
		public System.Data.Linq.Table<gitoperator> gitoperators
		{
			get
			{
				return this.GetTable<gitoperator>();
			}
		}
		
		public System.Data.Linq.Table<gitoption> gitoptions
		{
			get
			{
				return this.GetTable<gitoption>();
			}
		}
		
		public System.Data.Linq.Table<gitpermit> gitpermits
		{
			get
			{
				return this.GetTable<gitpermit>();
			}
		}
		
		public System.Data.Linq.Table<gituser> gitusers
		{
			get
			{
				return this.GetTable<gituser>();
			}
		}
		
		public System.Data.Linq.Table<tbreqguest> tbreqguests
		{
			get
			{
				return this.GetTable<tbreqguest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitdevice")]
	public partial class gitdevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ipmain;
		
		private string _ipforegin;
		
		private string _namedevice;
		
		private bool _active;
		
		private string _zoon;
		
		private int _direction;
		
		private int _gen;
		
		private bool _netStatus;
		
		private int _timpssage;
		
		private int _timserver;
		
		private EntitySet<gitpermit> _gitpermits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnipmainChanging(string value);
    partial void OnipmainChanged();
    partial void OnipforeginChanging(string value);
    partial void OnipforeginChanged();
    partial void OnnamedeviceChanging(string value);
    partial void OnnamedeviceChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnzoonChanging(string value);
    partial void OnzoonChanged();
    partial void OndirectionChanging(int value);
    partial void OndirectionChanged();
    partial void OngenChanging(int value);
    partial void OngenChanged();
    partial void OnnetStatusChanging(bool value);
    partial void OnnetStatusChanged();
    partial void OntimpssageChanging(int value);
    partial void OntimpssageChanged();
    partial void OntimserverChanging(int value);
    partial void OntimserverChanged();
    #endregion
		
		public gitdevice()
		{
			this._gitpermits = new EntitySet<gitpermit>(new Action<gitpermit>(this.attach_gitpermits), new Action<gitpermit>(this.detach_gitpermits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipmain", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ipmain
		{
			get
			{
				return this._ipmain;
			}
			set
			{
				if ((this._ipmain != value))
				{
					this.OnipmainChanging(value);
					this.SendPropertyChanging();
					this._ipmain = value;
					this.SendPropertyChanged("ipmain");
					this.OnipmainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipforegin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ipforegin
		{
			get
			{
				return this._ipforegin;
			}
			set
			{
				if ((this._ipforegin != value))
				{
					this.OnipforeginChanging(value);
					this.SendPropertyChanging();
					this._ipforegin = value;
					this.SendPropertyChanged("ipforegin");
					this.OnipforeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namedevice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string namedevice
		{
			get
			{
				return this._namedevice;
			}
			set
			{
				if ((this._namedevice != value))
				{
					this.OnnamedeviceChanging(value);
					this.SendPropertyChanging();
					this._namedevice = value;
					this.SendPropertyChanged("namedevice");
					this.OnnamedeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zoon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string zoon
		{
			get
			{
				return this._zoon;
			}
			set
			{
				if ((this._zoon != value))
				{
					this.OnzoonChanging(value);
					this.SendPropertyChanging();
					this._zoon = value;
					this.SendPropertyChanged("zoon");
					this.OnzoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direction", DbType="Int NOT NULL")]
		public int direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this.OndirectionChanging(value);
					this.SendPropertyChanging();
					this._direction = value;
					this.SendPropertyChanged("direction");
					this.OndirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gen", DbType="Int NOT NULL")]
		public int gen
		{
			get
			{
				return this._gen;
			}
			set
			{
				if ((this._gen != value))
				{
					this.OngenChanging(value);
					this.SendPropertyChanging();
					this._gen = value;
					this.SendPropertyChanged("gen");
					this.OngenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netStatus", DbType="Bit NOT NULL")]
		public bool netStatus
		{
			get
			{
				return this._netStatus;
			}
			set
			{
				if ((this._netStatus != value))
				{
					this.OnnetStatusChanging(value);
					this.SendPropertyChanging();
					this._netStatus = value;
					this.SendPropertyChanged("netStatus");
					this.OnnetStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timpssage", DbType="Int NOT NULL")]
		public int timpssage
		{
			get
			{
				return this._timpssage;
			}
			set
			{
				if ((this._timpssage != value))
				{
					this.OntimpssageChanging(value);
					this.SendPropertyChanging();
					this._timpssage = value;
					this.SendPropertyChanged("timpssage");
					this.OntimpssageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timserver", DbType="Int NOT NULL")]
		public int timserver
		{
			get
			{
				return this._timserver;
			}
			set
			{
				if ((this._timserver != value))
				{
					this.OntimserverChanging(value);
					this.SendPropertyChanging();
					this._timserver = value;
					this.SendPropertyChanged("timserver");
					this.OntimserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitdevice_gitpermit", Storage="_gitpermits", ThisKey="id", OtherKey="deviceId")]
		public EntitySet<gitpermit> gitpermits
		{
			get
			{
				return this._gitpermits;
			}
			set
			{
				this._gitpermits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gitpermits(gitpermit entity)
		{
			this.SendPropertyChanging();
			entity.gitdevice = this;
		}
		
		private void detach_gitpermits(gitpermit entity)
		{
			this.SendPropertyChanging();
			entity.gitdevice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[HC.direction]")]
	public partial class HC_direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _code;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(System.Nullable<int> value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public HC_direction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int")]
		public System.Nullable<int> code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitlog")]
	public partial class gitlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _stu_id;
		
		private string _nam;
		
		private string _pic;
		
		private int _direction;
		
		private System.DateTime _tim;
		
		private System.DateTime _dat;
		
		private int _deviceId;
		
		private System.Nullable<int> _typepass;
		
		private int _commentId;
		
		private EntityRef<gitmessage> _gitmessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstu_idChanging(string value);
    partial void Onstu_idChanged();
    partial void OnnamChanging(string value);
    partial void OnnamChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    partial void OndirectionChanging(int value);
    partial void OndirectionChanged();
    partial void OntimChanging(System.DateTime value);
    partial void OntimChanged();
    partial void OndatChanging(System.DateTime value);
    partial void OndatChanged();
    partial void OndeviceIdChanging(int value);
    partial void OndeviceIdChanged();
    partial void OntypepassChanging(System.Nullable<int> value);
    partial void OntypepassChanged();
    partial void OncommentIdChanging(int value);
    partial void OncommentIdChanged();
    #endregion
		
		public gitlog()
		{
			this._gitmessage = default(EntityRef<gitmessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string stu_id
		{
			get
			{
				return this._stu_id;
			}
			set
			{
				if ((this._stu_id != value))
				{
					this.Onstu_idChanging(value);
					this.SendPropertyChanging();
					this._stu_id = value;
					this.SendPropertyChanged("stu_id");
					this.Onstu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="NVarChar(50)")]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direction", DbType="Int NOT NULL")]
		public int direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this.OndirectionChanging(value);
					this.SendPropertyChanging();
					this._direction = value;
					this.SendPropertyChanged("direction");
					this.OndirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tim", DbType="SmallDateTime NOT NULL")]
		public System.DateTime tim
		{
			get
			{
				return this._tim;
			}
			set
			{
				if ((this._tim != value))
				{
					this.OntimChanging(value);
					this.SendPropertyChanging();
					this._tim = value;
					this.SendPropertyChanged("tim");
					this.OntimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dat", DbType="DateTime NOT NULL")]
		public System.DateTime dat
		{
			get
			{
				return this._dat;
			}
			set
			{
				if ((this._dat != value))
				{
					this.OndatChanging(value);
					this.SendPropertyChanging();
					this._dat = value;
					this.SendPropertyChanged("dat");
					this.OndatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceId", DbType="Int NOT NULL")]
		public int deviceId
		{
			get
			{
				return this._deviceId;
			}
			set
			{
				if ((this._deviceId != value))
				{
					this.OndeviceIdChanging(value);
					this.SendPropertyChanging();
					this._deviceId = value;
					this.SendPropertyChanged("deviceId");
					this.OndeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typepass", DbType="Int")]
		public System.Nullable<int> typepass
		{
			get
			{
				return this._typepass;
			}
			set
			{
				if ((this._typepass != value))
				{
					this.OntypepassChanging(value);
					this.SendPropertyChanging();
					this._typepass = value;
					this.SendPropertyChanged("typepass");
					this.OntypepassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentId", DbType="Int NOT NULL")]
		public int commentId
		{
			get
			{
				return this._commentId;
			}
			set
			{
				if ((this._commentId != value))
				{
					if (this._gitmessage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncommentIdChanging(value);
					this.SendPropertyChanging();
					this._commentId = value;
					this.SendPropertyChanged("commentId");
					this.OncommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitmessage_gitlog", Storage="_gitmessage", ThisKey="commentId", OtherKey="Id", IsForeignKey=true)]
		public gitmessage gitmessage
		{
			get
			{
				return this._gitmessage.Entity;
			}
			set
			{
				gitmessage previousValue = this._gitmessage.Entity;
				if (((previousValue != value) 
							|| (this._gitmessage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gitmessage.Entity = null;
						previousValue.gitlogs.Remove(this);
					}
					this._gitmessage.Entity = value;
					if ((value != null))
					{
						value.gitlogs.Add(this);
						this._commentId = value.Id;
					}
					else
					{
						this._commentId = default(int);
					}
					this.SendPropertyChanged("gitmessage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitlogOperator")]
	public partial class gitlogOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ip;
		
		private string _us;
		
		private System.Nullable<System.DateTime> _tim;
		
		private System.DateTime _dat;
		
		private int _msgopId;
		
		private string _descript;
		
		private EntityRef<gitmsgOperator> _gitmsgOperator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnusChanging(string value);
    partial void OnusChanged();
    partial void OntimChanging(System.Nullable<System.DateTime> value);
    partial void OntimChanged();
    partial void OndatChanging(System.DateTime value);
    partial void OndatChanged();
    partial void OnmsgopIdChanging(int value);
    partial void OnmsgopIdChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
		
		public gitlogOperator()
		{
			this._gitmsgOperator = default(EntityRef<gitmsgOperator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string us
		{
			get
			{
				return this._us;
			}
			set
			{
				if ((this._us != value))
				{
					this.OnusChanging(value);
					this.SendPropertyChanging();
					this._us = value;
					this.SendPropertyChanged("us");
					this.OnusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tim", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> tim
		{
			get
			{
				return this._tim;
			}
			set
			{
				if ((this._tim != value))
				{
					this.OntimChanging(value);
					this.SendPropertyChanging();
					this._tim = value;
					this.SendPropertyChanged("tim");
					this.OntimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dat", DbType="DateTime NOT NULL")]
		public System.DateTime dat
		{
			get
			{
				return this._dat;
			}
			set
			{
				if ((this._dat != value))
				{
					this.OndatChanging(value);
					this.SendPropertyChanging();
					this._dat = value;
					this.SendPropertyChanged("dat");
					this.OndatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgopId", DbType="Int NOT NULL")]
		public int msgopId
		{
			get
			{
				return this._msgopId;
			}
			set
			{
				if ((this._msgopId != value))
				{
					if (this._gitmsgOperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsgopIdChanging(value);
					this.SendPropertyChanging();
					this._msgopId = value;
					this.SendPropertyChanged("msgopId");
					this.OnmsgopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="NVarChar(1000)")]
		public string descript
		{
			get
			{
				return this._descript;
			}
			set
			{
				if ((this._descript != value))
				{
					this.OndescriptChanging(value);
					this.SendPropertyChanging();
					this._descript = value;
					this.SendPropertyChanged("descript");
					this.OndescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitmsgOperator_gitlogOperator", Storage="_gitmsgOperator", ThisKey="msgopId", OtherKey="id", IsForeignKey=true)]
		public gitmsgOperator gitmsgOperator
		{
			get
			{
				return this._gitmsgOperator.Entity;
			}
			set
			{
				gitmsgOperator previousValue = this._gitmsgOperator.Entity;
				if (((previousValue != value) 
							|| (this._gitmsgOperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gitmsgOperator.Entity = null;
						previousValue.gitlogOperators.Remove(this);
					}
					this._gitmsgOperator.Entity = value;
					if ((value != null))
					{
						value.gitlogOperators.Add(this);
						this._msgopId = value.id;
					}
					else
					{
						this._msgopId = default(int);
					}
					this.SendPropertyChanged("gitmsgOperator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitmessage")]
	public partial class gitmessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _message;
		
		private EntitySet<gitlog> _gitlogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public gitmessage()
		{
			this._gitlogs = new EntitySet<gitlog>(new Action<gitlog>(this.attach_gitlogs), new Action<gitlog>(this.detach_gitlogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitmessage_gitlog", Storage="_gitlogs", ThisKey="Id", OtherKey="commentId")]
		public EntitySet<gitlog> gitlogs
		{
			get
			{
				return this._gitlogs;
			}
			set
			{
				this._gitlogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gitlogs(gitlog entity)
		{
			this.SendPropertyChanging();
			entity.gitmessage = this;
		}
		
		private void detach_gitlogs(gitlog entity)
		{
			this.SendPropertyChanging();
			entity.gitmessage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitmsgOperator")]
	public partial class gitmsgOperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _messageUser;
		
		private EntitySet<gitlogOperator> _gitlogOperators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmessageUserChanging(string value);
    partial void OnmessageUserChanged();
    #endregion
		
		public gitmsgOperator()
		{
			this._gitlogOperators = new EntitySet<gitlogOperator>(new Action<gitlogOperator>(this.attach_gitlogOperators), new Action<gitlogOperator>(this.detach_gitlogOperators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageUser", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string messageUser
		{
			get
			{
				return this._messageUser;
			}
			set
			{
				if ((this._messageUser != value))
				{
					this.OnmessageUserChanging(value);
					this.SendPropertyChanging();
					this._messageUser = value;
					this.SendPropertyChanged("messageUser");
					this.OnmessageUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitmsgOperator_gitlogOperator", Storage="_gitlogOperators", ThisKey="id", OtherKey="msgopId")]
		public EntitySet<gitlogOperator> gitlogOperators
		{
			get
			{
				return this._gitlogOperators;
			}
			set
			{
				this._gitlogOperators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gitlogOperators(gitlogOperator entity)
		{
			this.SendPropertyChanging();
			entity.gitmsgOperator = this;
		}
		
		private void detach_gitlogOperators(gitlogOperator entity)
		{
			this.SendPropertyChanging();
			entity.gitmsgOperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitoperator")]
	public partial class gitoperator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nam;
		
		private string _fam;
		
		private string _us;
		
		private string _pass;
		
		private int _timshowpic;
		
		private int _recordcount;
		
		private System.DateTime _datcreate;
		
		private EntitySet<gitpermit> _gitpermits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnamChanging(string value);
    partial void OnnamChanged();
    partial void OnfamChanging(string value);
    partial void OnfamChanged();
    partial void OnusChanging(string value);
    partial void OnusChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OntimshowpicChanging(int value);
    partial void OntimshowpicChanged();
    partial void OnrecordcountChanging(int value);
    partial void OnrecordcountChanged();
    partial void OndatcreateChanging(System.DateTime value);
    partial void OndatcreateChanged();
    #endregion
		
		public gitoperator()
		{
			this._gitpermits = new EntitySet<gitpermit>(new Action<gitpermit>(this.attach_gitpermits), new Action<gitpermit>(this.detach_gitpermits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fam
		{
			get
			{
				return this._fam;
			}
			set
			{
				if ((this._fam != value))
				{
					this.OnfamChanging(value);
					this.SendPropertyChanging();
					this._fam = value;
					this.SendPropertyChanged("fam");
					this.OnfamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_us", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string us
		{
			get
			{
				return this._us;
			}
			set
			{
				if ((this._us != value))
				{
					this.OnusChanging(value);
					this.SendPropertyChanging();
					this._us = value;
					this.SendPropertyChanged("us");
					this.OnusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timshowpic", DbType="Int NOT NULL")]
		public int timshowpic
		{
			get
			{
				return this._timshowpic;
			}
			set
			{
				if ((this._timshowpic != value))
				{
					this.OntimshowpicChanging(value);
					this.SendPropertyChanging();
					this._timshowpic = value;
					this.SendPropertyChanged("timshowpic");
					this.OntimshowpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordcount", DbType="Int NOT NULL")]
		public int recordcount
		{
			get
			{
				return this._recordcount;
			}
			set
			{
				if ((this._recordcount != value))
				{
					this.OnrecordcountChanging(value);
					this.SendPropertyChanging();
					this._recordcount = value;
					this.SendPropertyChanged("recordcount");
					this.OnrecordcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datcreate", DbType="DateTime NOT NULL")]
		public System.DateTime datcreate
		{
			get
			{
				return this._datcreate;
			}
			set
			{
				if ((this._datcreate != value))
				{
					this.OndatcreateChanging(value);
					this.SendPropertyChanging();
					this._datcreate = value;
					this.SendPropertyChanged("datcreate");
					this.OndatcreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitoperator_gitpermit", Storage="_gitpermits", ThisKey="id", OtherKey="operatorId")]
		public EntitySet<gitpermit> gitpermits
		{
			get
			{
				return this._gitpermits;
			}
			set
			{
				this._gitpermits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_gitpermits(gitpermit entity)
		{
			this.SendPropertyChanging();
			entity.gitoperator = this;
		}
		
		private void detach_gitpermits(gitpermit entity)
		{
			this.SendPropertyChanging();
			entity.gitoperator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitoption")]
	public partial class gitoption
	{
		
		private System.DateTime _datstartsuit;
		
		private string _pdatstartsuit;
		
		private System.DateTime _datendsuit;
		
		private string _pdatendsuit;
		
		private int _genzoonw;
		
		private int _genzoonm;
		
		private int _emergency;
		
		private System.Nullable<int> _port;
		
		public gitoption()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datstartsuit", DbType="DateTime NOT NULL")]
		public System.DateTime datstartsuit
		{
			get
			{
				return this._datstartsuit;
			}
			set
			{
				if ((this._datstartsuit != value))
				{
					this._datstartsuit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdatstartsuit", DbType="NVarChar(50)")]
		public string pdatstartsuit
		{
			get
			{
				return this._pdatstartsuit;
			}
			set
			{
				if ((this._pdatstartsuit != value))
				{
					this._pdatstartsuit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datendsuit", DbType="DateTime NOT NULL")]
		public System.DateTime datendsuit
		{
			get
			{
				return this._datendsuit;
			}
			set
			{
				if ((this._datendsuit != value))
				{
					this._datendsuit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdatendsuit", DbType="NVarChar(50)")]
		public string pdatendsuit
		{
			get
			{
				return this._pdatendsuit;
			}
			set
			{
				if ((this._pdatendsuit != value))
				{
					this._pdatendsuit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genzoonw", DbType="Int NOT NULL")]
		public int genzoonw
		{
			get
			{
				return this._genzoonw;
			}
			set
			{
				if ((this._genzoonw != value))
				{
					this._genzoonw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genzoonm", DbType="Int NOT NULL")]
		public int genzoonm
		{
			get
			{
				return this._genzoonm;
			}
			set
			{
				if ((this._genzoonm != value))
				{
					this._genzoonm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emergency", DbType="Int NOT NULL")]
		public int emergency
		{
			get
			{
				return this._emergency;
			}
			set
			{
				if ((this._emergency != value))
				{
					this._emergency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Int")]
		public System.Nullable<int> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gitpermit")]
	public partial class gitpermit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _deviceId;
		
		private int _operatorId;
		
		private EntityRef<gitdevice> _gitdevice;
		
		private EntityRef<gitoperator> _gitoperator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndeviceIdChanging(int value);
    partial void OndeviceIdChanged();
    partial void OnoperatorIdChanging(int value);
    partial void OnoperatorIdChanged();
    #endregion
		
		public gitpermit()
		{
			this._gitdevice = default(EntityRef<gitdevice>);
			this._gitoperator = default(EntityRef<gitoperator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceId", DbType="Int NOT NULL")]
		public int deviceId
		{
			get
			{
				return this._deviceId;
			}
			set
			{
				if ((this._deviceId != value))
				{
					if (this._gitdevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceIdChanging(value);
					this.SendPropertyChanging();
					this._deviceId = value;
					this.SendPropertyChanged("deviceId");
					this.OndeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="Int NOT NULL")]
		public int operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					if (this._gitoperator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("operatorId");
					this.OnoperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitdevice_gitpermit", Storage="_gitdevice", ThisKey="deviceId", OtherKey="id", IsForeignKey=true)]
		public gitdevice gitdevice
		{
			get
			{
				return this._gitdevice.Entity;
			}
			set
			{
				gitdevice previousValue = this._gitdevice.Entity;
				if (((previousValue != value) 
							|| (this._gitdevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gitdevice.Entity = null;
						previousValue.gitpermits.Remove(this);
					}
					this._gitdevice.Entity = value;
					if ((value != null))
					{
						value.gitpermits.Add(this);
						this._deviceId = value.id;
					}
					else
					{
						this._deviceId = default(int);
					}
					this.SendPropertyChanged("gitdevice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gitoperator_gitpermit", Storage="_gitoperator", ThisKey="operatorId", OtherKey="id", IsForeignKey=true)]
		public gitoperator gitoperator
		{
			get
			{
				return this._gitoperator.Entity;
			}
			set
			{
				gitoperator previousValue = this._gitoperator.Entity;
				if (((previousValue != value) 
							|| (this._gitoperator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gitoperator.Entity = null;
						previousValue.gitpermits.Remove(this);
					}
					this._gitoperator.Entity = value;
					if ((value != null))
					{
						value.gitpermits.Add(this);
						this._operatorId = value.id;
					}
					else
					{
						this._operatorId = default(int);
					}
					this.SendPropertyChanged("gitoperator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gituser")]
	public partial class gituser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _stu_id;
		
		private string _cdn;
		
		private string _nam;
		
		private string _fam;
		
		private int _gen;
		
		private int _suitmem;
		
		private string _suitname;
		
		private string _pic;
		
		private System.DateTime _startdat;
		
		private string _pstartdat;
		
		private System.DateTime _enddat;
		
		private string _penddat;
		
		private bool _active;
		
		private System.Nullable<int> _typepass;
		
		private int _type;
		
		private string _comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstu_idChanging(string value);
    partial void Onstu_idChanged();
    partial void OncdnChanging(string value);
    partial void OncdnChanged();
    partial void OnnamChanging(string value);
    partial void OnnamChanged();
    partial void OnfamChanging(string value);
    partial void OnfamChanged();
    partial void OngenChanging(int value);
    partial void OngenChanged();
    partial void OnsuitmemChanging(int value);
    partial void OnsuitmemChanged();
    partial void OnsuitnameChanging(string value);
    partial void OnsuitnameChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    partial void OnstartdatChanging(System.DateTime value);
    partial void OnstartdatChanged();
    partial void OnpstartdatChanging(string value);
    partial void OnpstartdatChanged();
    partial void OnenddatChanging(System.DateTime value);
    partial void OnenddatChanged();
    partial void OnpenddatChanging(string value);
    partial void OnpenddatChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OntypepassChanging(System.Nullable<int> value);
    partial void OntypepassChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public gituser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string stu_id
		{
			get
			{
				return this._stu_id;
			}
			set
			{
				if ((this._stu_id != value))
				{
					this.Onstu_idChanging(value);
					this.SendPropertyChanging();
					this._stu_id = value;
					this.SendPropertyChanged("stu_id");
					this.Onstu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string cdn
		{
			get
			{
				return this._cdn;
			}
			set
			{
				if ((this._cdn != value))
				{
					this.OncdnChanging(value);
					this.SendPropertyChanging();
					this._cdn = value;
					this.SendPropertyChanged("cdn");
					this.OncdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fam
		{
			get
			{
				return this._fam;
			}
			set
			{
				if ((this._fam != value))
				{
					this.OnfamChanging(value);
					this.SendPropertyChanging();
					this._fam = value;
					this.SendPropertyChanged("fam");
					this.OnfamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gen", DbType="Int NOT NULL")]
		public int gen
		{
			get
			{
				return this._gen;
			}
			set
			{
				if ((this._gen != value))
				{
					this.OngenChanging(value);
					this.SendPropertyChanging();
					this._gen = value;
					this.SendPropertyChanged("gen");
					this.OngenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suitmem", DbType="Int NOT NULL")]
		public int suitmem
		{
			get
			{
				return this._suitmem;
			}
			set
			{
				if ((this._suitmem != value))
				{
					this.OnsuitmemChanging(value);
					this.SendPropertyChanging();
					this._suitmem = value;
					this.SendPropertyChanged("suitmem");
					this.OnsuitmemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suitname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string suitname
		{
			get
			{
				return this._suitname;
			}
			set
			{
				if ((this._suitname != value))
				{
					this.OnsuitnameChanging(value);
					this.SendPropertyChanging();
					this._suitname = value;
					this.SendPropertyChanged("suitname");
					this.OnsuitnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="NVarChar(50)")]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdat", DbType="DateTime NOT NULL")]
		public System.DateTime startdat
		{
			get
			{
				return this._startdat;
			}
			set
			{
				if ((this._startdat != value))
				{
					this.OnstartdatChanging(value);
					this.SendPropertyChanging();
					this._startdat = value;
					this.SendPropertyChanged("startdat");
					this.OnstartdatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pstartdat", DbType="NVarChar(50)")]
		public string pstartdat
		{
			get
			{
				return this._pstartdat;
			}
			set
			{
				if ((this._pstartdat != value))
				{
					this.OnpstartdatChanging(value);
					this.SendPropertyChanging();
					this._pstartdat = value;
					this.SendPropertyChanged("pstartdat");
					this.OnpstartdatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enddat", DbType="DateTime NOT NULL")]
		public System.DateTime enddat
		{
			get
			{
				return this._enddat;
			}
			set
			{
				if ((this._enddat != value))
				{
					this.OnenddatChanging(value);
					this.SendPropertyChanging();
					this._enddat = value;
					this.SendPropertyChanged("enddat");
					this.OnenddatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_penddat", DbType="NVarChar(50)")]
		public string penddat
		{
			get
			{
				return this._penddat;
			}
			set
			{
				if ((this._penddat != value))
				{
					this.OnpenddatChanging(value);
					this.SendPropertyChanging();
					this._penddat = value;
					this.SendPropertyChanged("penddat");
					this.OnpenddatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typepass", DbType="Int")]
		public System.Nullable<int> typepass
		{
			get
			{
				return this._typepass;
			}
			set
			{
				if ((this._typepass != value))
				{
					this.OntypepassChanging(value);
					this.SendPropertyChanging();
					this._typepass = value;
					this.SendPropertyChanged("typepass");
					this.OntypepassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(1000)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbreqguest")]
	public partial class tbreqguest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _stu_id;
		
		private string _nam;
		
		private string _fam;
		
		private int _kind;
		
		private string _stuguest;
		
		private string _namguest;
		
		private string _cdnguest;
		
		private string _nesbat;
		
		private System.Nullable<System.DateTime> _dats;
		
		private string _pdats;
		
		private System.Nullable<System.DateTime> _datf;
		
		private string _pdatf;
		
		private System.Nullable<int> _cday;
		
		private string _nesbatdet;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<System.DateTime> _dat;
		
		private string _pdat;
		
		private System.Nullable<int> _suitx;
		
		private string _modirnam;
		
		private string _commodir;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstu_idChanging(string value);
    partial void Onstu_idChanged();
    partial void OnnamChanging(string value);
    partial void OnnamChanged();
    partial void OnfamChanging(string value);
    partial void OnfamChanged();
    partial void OnkindChanging(int value);
    partial void OnkindChanged();
    partial void OnstuguestChanging(string value);
    partial void OnstuguestChanged();
    partial void OnnamguestChanging(string value);
    partial void OnnamguestChanged();
    partial void OncdnguestChanging(string value);
    partial void OncdnguestChanged();
    partial void OnnesbatChanging(string value);
    partial void OnnesbatChanged();
    partial void OndatsChanging(System.Nullable<System.DateTime> value);
    partial void OndatsChanged();
    partial void OnpdatsChanging(string value);
    partial void OnpdatsChanged();
    partial void OndatfChanging(System.Nullable<System.DateTime> value);
    partial void OndatfChanged();
    partial void OnpdatfChanging(string value);
    partial void OnpdatfChanged();
    partial void OncdayChanging(System.Nullable<int> value);
    partial void OncdayChanged();
    partial void OnnesbatdetChanging(string value);
    partial void OnnesbatdetChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OndatChanging(System.Nullable<System.DateTime> value);
    partial void OndatChanged();
    partial void OnpdatChanging(string value);
    partial void OnpdatChanged();
    partial void OnsuitxChanging(System.Nullable<int> value);
    partial void OnsuitxChanged();
    partial void OnmodirnamChanging(string value);
    partial void OnmodirnamChanged();
    partial void OncommodirChanging(string value);
    partial void OncommodirChanged();
    #endregion
		
		public tbreqguest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string stu_id
		{
			get
			{
				return this._stu_id;
			}
			set
			{
				if ((this._stu_id != value))
				{
					this.Onstu_idChanging(value);
					this.SendPropertyChanging();
					this._stu_id = value;
					this.SendPropertyChanged("stu_id");
					this.Onstu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nam
		{
			get
			{
				return this._nam;
			}
			set
			{
				if ((this._nam != value))
				{
					this.OnnamChanging(value);
					this.SendPropertyChanging();
					this._nam = value;
					this.SendPropertyChanged("nam");
					this.OnnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fam
		{
			get
			{
				return this._fam;
			}
			set
			{
				if ((this._fam != value))
				{
					this.OnfamChanging(value);
					this.SendPropertyChanging();
					this._fam = value;
					this.SendPropertyChanged("fam");
					this.OnfamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind", DbType="Int NOT NULL")]
		public int kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuguest", DbType="NVarChar(50)")]
		public string stuguest
		{
			get
			{
				return this._stuguest;
			}
			set
			{
				if ((this._stuguest != value))
				{
					this.OnstuguestChanging(value);
					this.SendPropertyChanging();
					this._stuguest = value;
					this.SendPropertyChanged("stuguest");
					this.OnstuguestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namguest", DbType="NVarChar(50)")]
		public string namguest
		{
			get
			{
				return this._namguest;
			}
			set
			{
				if ((this._namguest != value))
				{
					this.OnnamguestChanging(value);
					this.SendPropertyChanging();
					this._namguest = value;
					this.SendPropertyChanged("namguest");
					this.OnnamguestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdnguest", DbType="NVarChar(50)")]
		public string cdnguest
		{
			get
			{
				return this._cdnguest;
			}
			set
			{
				if ((this._cdnguest != value))
				{
					this.OncdnguestChanging(value);
					this.SendPropertyChanging();
					this._cdnguest = value;
					this.SendPropertyChanged("cdnguest");
					this.OncdnguestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nesbat", DbType="NVarChar(50)")]
		public string nesbat
		{
			get
			{
				return this._nesbat;
			}
			set
			{
				if ((this._nesbat != value))
				{
					this.OnnesbatChanging(value);
					this.SendPropertyChanging();
					this._nesbat = value;
					this.SendPropertyChanged("nesbat");
					this.OnnesbatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dats", DbType="DateTime")]
		public System.Nullable<System.DateTime> dats
		{
			get
			{
				return this._dats;
			}
			set
			{
				if ((this._dats != value))
				{
					this.OndatsChanging(value);
					this.SendPropertyChanging();
					this._dats = value;
					this.SendPropertyChanged("dats");
					this.OndatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdats", DbType="NVarChar(50)")]
		public string pdats
		{
			get
			{
				return this._pdats;
			}
			set
			{
				if ((this._pdats != value))
				{
					this.OnpdatsChanging(value);
					this.SendPropertyChanging();
					this._pdats = value;
					this.SendPropertyChanged("pdats");
					this.OnpdatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datf", DbType="DateTime")]
		public System.Nullable<System.DateTime> datf
		{
			get
			{
				return this._datf;
			}
			set
			{
				if ((this._datf != value))
				{
					this.OndatfChanging(value);
					this.SendPropertyChanging();
					this._datf = value;
					this.SendPropertyChanged("datf");
					this.OndatfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdatf", DbType="NVarChar(50)")]
		public string pdatf
		{
			get
			{
				return this._pdatf;
			}
			set
			{
				if ((this._pdatf != value))
				{
					this.OnpdatfChanging(value);
					this.SendPropertyChanging();
					this._pdatf = value;
					this.SendPropertyChanged("pdatf");
					this.OnpdatfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cday", DbType="Int")]
		public System.Nullable<int> cday
		{
			get
			{
				return this._cday;
			}
			set
			{
				if ((this._cday != value))
				{
					this.OncdayChanging(value);
					this.SendPropertyChanging();
					this._cday = value;
					this.SendPropertyChanged("cday");
					this.OncdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nesbatdet", DbType="NVarChar(50)")]
		public string nesbatdet
		{
			get
			{
				return this._nesbatdet;
			}
			set
			{
				if ((this._nesbatdet != value))
				{
					this.OnnesbatdetChanging(value);
					this.SendPropertyChanging();
					this._nesbatdet = value;
					this.SendPropertyChanged("nesbatdet");
					this.OnnesbatdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dat", DbType="DateTime")]
		public System.Nullable<System.DateTime> dat
		{
			get
			{
				return this._dat;
			}
			set
			{
				if ((this._dat != value))
				{
					this.OndatChanging(value);
					this.SendPropertyChanging();
					this._dat = value;
					this.SendPropertyChanged("dat");
					this.OndatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdat", DbType="NVarChar(50)")]
		public string pdat
		{
			get
			{
				return this._pdat;
			}
			set
			{
				if ((this._pdat != value))
				{
					this.OnpdatChanging(value);
					this.SendPropertyChanging();
					this._pdat = value;
					this.SendPropertyChanged("pdat");
					this.OnpdatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suitx", DbType="Int")]
		public System.Nullable<int> suitx
		{
			get
			{
				return this._suitx;
			}
			set
			{
				if ((this._suitx != value))
				{
					this.OnsuitxChanging(value);
					this.SendPropertyChanging();
					this._suitx = value;
					this.SendPropertyChanged("suitx");
					this.OnsuitxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modirnam", DbType="NVarChar(50)")]
		public string modirnam
		{
			get
			{
				return this._modirnam;
			}
			set
			{
				if ((this._modirnam != value))
				{
					this.OnmodirnamChanging(value);
					this.SendPropertyChanging();
					this._modirnam = value;
					this.SendPropertyChanged("modirnam");
					this.OnmodirnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commodir", DbType="NVarChar(MAX)")]
		public string commodir
		{
			get
			{
				return this._commodir;
			}
			set
			{
				if ((this._commodir != value))
				{
					this.OncommodirChanging(value);
					this.SendPropertyChanging();
					this._commodir = value;
					this.SendPropertyChanged("commodir");
					this.OncommodirChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
